进程与线程
	进程
		进程的调度政策
			1.先来先服务
			2.短作业优先
			3.优先级调度
			4.时间片轮转调度
			5.高响应比优先调度
			6.多级队列调度
			7.多级反馈队列调度
		什么是孤儿进程和僵尸进程
			孤儿进程：父进程退出，子进程还在运行，则被称为孤儿进程。孤儿进程会被 init 进程（一号进程）收养，并由 init 进程对他们完成状态收集工作。
			僵尸进程：进程使用 fork 创建子进程，如果子进程中途推出，而父进程没有调用 wait 获取紫禁城的状态信息，那么子进程的状态描述礽贪保存在系统中，那么这些子进程被称为僵尸进程。
		简述进程间的通信方法
			每个进程各自有不同的用户地址空间，任何一个进程的全局变量在另一个进程中都看不到，所以进程之间
			进程间通信主要包括管道、系统 IPC（消息队列、信号量、信号、共享内存等）、以及socket
	线程
	进程与线程的区别和联系
		1.一个线程只能属于一个进程，一个进程可以包含多个线程，但至少要有一个。即线程依赖着进程而存在。
		2.进程是资源分配的最小单位，线程是计算机调度的最小单位。
		3.进程在执行的过程中有独立的地址空间，而进程里的线程共享这个空间（这也就是为什么说进程是资源分配的最小单位）。
		4.由于同一进程中的多个线程拥有相同的地址空间。因此他们之间的同步与通信会更容易实现。
		5.进程编程调试简单，可靠性高；创建销毁开销大
		6.线程开销小，切换速度快，但是编程调试相对复杂
		7.进程适用于多核多机分布
	死锁
		死锁是怎样产生的
			定义：死锁是指两个或者两个以上的进程在执行过程中，因争夺资源而造成的相互等待现象。
			产生死锁需要满足下列四个条件
				1.互斥条件：进程对所分配到的资源不允许其他进程同时访问，如果需要访问则需等待资源被释放。
				2.占有并等待条件：进程获得一定资源后（占有），向其他资源发出请求，即使请求阻塞，进程仍不会释放已经占用的资源（等待）。
				3.非抢占条件：进程已获得的资源，在未使用完成之前，不可以被剥夺（被强占），只能主动释放。
				4.循环等待条件：进程发生思索后，必然存在一个进程-资源之间的环形链。
		如何解决死锁
			破坏必要条件的其中一个就可以了
			1.资源一次性分配，要么没有，要么全有，不再需要请求。
			2.当前进程新的资源暂时无法得到满足时，释放已占有的资源。
			3.如果一个进程的请求会导致死锁，则不启动该进程。
			4.如果一个进程的增加资源请求会导致死锁，则拒绝该申请。
			5.资源有序分配，系统给没类资源赋予编号

I/O
	简述 select
		select 是一种多路复用技术。其接收所有输入的文件描述符，并返回哪些文件有新数据。
		其可以设置为阻塞状态和非阻塞状态，底层采用 1024 位 bitmap 实现，因此有文件描述符的上限数。
	poll
	epoll
